# sonos2mqtt
# The sonos2mqtt bridge device (entire hex id of devices as bridgeRegexp)
name:sonos2mqtt_bridge
desc:The sonos2mqtt bridge device, Forum #111711 and Wiki 
filter:TYPE=MQTT2_DEVICE
order:M_05
par:BASE_TOPIC;base topic set in configuration.yaml of the sonos2mqtt bridge;{ AttrVal("DEVICE","devicetopic",'sonos') }
par:ICON;ICON as set, defaults to mqtt_bridge_2;{ AttrVal("DEVICE","icon","mqtt_bridge_2") }
attr DEVICE icon ICON
attr DEVICE bridgeRegexp\
  BASE_TOPIC/(RINCON_[A-Z0-9]+)[:/].* "$1"
attr DEVICE readingList\
  BASE_TOPIC/connected:.* connected\
  homeassistant/music_player/RINCON_([0-9A-Z]+)/sonos/config:.* { $TOPIC =~ m,(RINCON_[0-9A-Z]+),; { "config_$1"=>$EVENT }}\
  BASE_TOPIC/status/[^/]+/avtransport:.* {}\
  BASE_TOPIC/status/[^/]+/renderingcontrol:.* {}
attr DEVICE model sonos2mqtt_bridge
attr DEVICE devStateIcon 0:10px-kreis-rot 1:10px-kreis-gelb 2:10px-kreis-gruen
attr DEVICE stateFormat connected
attr DEVICE devicetopic BASE_TOPIC
setreading DEVICE attrTemplateVersion 20210301

name:sonos2mqtt_bridge_comfort
desc:The sonos2mqtt bridge adds 1 notify device for setup speakers, Forum #111711 and Wiki 
filter:TYPE=MQTT2_DEVICE
order:M_05c
{ $data{f}='99_sonos2mqttUtils.pm';\
#{$data{u}="https://svn.fhem.de/trac/browser/trunk/fhem/contrib/AttrTemplate/$data{f}?format=txt"}\
$data{u}="https://raw.githubusercontent.com/heinz-otto/scripts/master/fhem/$data{f}";\
qx(wget -qO FHEM/$data{f} $data{u}); CommandReload(undef, $data{f});\
delete $data{f};delete $data{u};''}
set DEVICE attrTemplate sonos2mqtt_bridge
attr DEVICE getList Favorites:noArg Favorites {sonos2mqtt($NAME,$EVENT)}
attr DEVICE setList PauseAll:noArg $\DEVICETOPIC/cmd/pauseall\
CheckSubscription:noArg $\DEVICETOPIC/cmd/check-subscriptions
attr SonosBridge userReadings favlist:Favorites.* {sonos2mqtt_ur($name,'favlist')},\
grouplist:Favorites.* {sonos2mqtt_ur($name,'grouplist')}
{sonos2mqtt_setup('a:model=sonos2mqtt_bridge')}
defmod n_configSonos notify global:DEFINED.MQTT2_RINCON_[A-Z0-9]+|MQTT2_RINCON_[A-Z0-9]+:IPAddress:.* {sonos2mqtt_nty($NAME,$EVENT)}
setreading DEVICE attrTemplateVersion 20210303

name:sonos2mqtt_speaker
desc:A basic sonos2mqtt speaker device, Forum #111711 and Wiki 
filter:TYPE=MQTT2_DEVICE
order:M_05b
par:BASE_TOPIC;base topic set in configuration.yaml of the sonos2mqtt bridge;{ AttrVal("DEVICE","devicetopic",'sonos') }
par:DEV_ID;techname of the device ;{ AttrVal("DEVICE","readingList","") =~ m,[^\/]+[\/](RINCON_[0-9A-Z]+):.*, ? $1 : undef }
par:ALIAS;friendly name as set in sonos gadget itself;{ ReadingsVal("DEVICE","name","unknown") }
par:DEVNAME;friendly name, used for topic in lowercase;{ lc(ReadingsVal("DEVICE","name","unknown")) }
par:ICON;ICON as set, defaults to audio_volume_low;{ AttrVal("DEVICE","icon","audio_volume_low") }
attr DEVICE icon ICON
attr DEVICE jsonMap volume_Master:volume mute_Master:mute
attr DEVICE stateFormat transportState
attr DEVICE readingList\
  $\DEVICETOPIC/DEV_ID:.* { json2nameValue($EVENT,'',$JSONMAP) }\
  $\DEVICETOPIC/DEV_ID/ZoneInfo:.* { json2nameValue($EVENT) }
attr DEVICE setList\
  x_raw_payload:textField { my $payload = $EVENT;$payload =~ s/$EVTPART0 //g; qq(BASE_TOPIC/DEV_ID/control $payload)}
attr DEVICE devStateIcon (STOPPED|PAUSED_PLAYBACK):rc_PLAY:toggle PLAYING:rc_PAUSE:pause .*:refresh:play
attr DEVICE alias ALIAS
attr DEVICE model sonos2mqtt_speaker
attr DEVICE devicetopic BASE_TOPIC
attr DEVICE userReadings Master:groupName.* {(split(' +',ReadingsVal($name,'groupName','')))[0]},\
isMaster:coordinatorUuid.* {sonos2mqtt_ur($name,'isMaster')},\
inGroup:groupName.* {ReadingsVal($name,'groupName','') =~ / \+ /?1:0},\
inCouple:coordinatorUuid.* {sonos2mqtt_ur($name,'inCouple')},\
Input:currentTrack_TrackUri.* {sonos2mqtt_ur($name,'Input')}
set DEVICE x_raw_payload {"command": "adv-command","input": {"cmd":"GetZoneInfo","reply":"ZoneInfo"}}
setreading DEVICE attrTemplateVersion 20210430
